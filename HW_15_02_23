Описание занятия:
 1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?

  git checkout .               отменить измение во всех файлах, где были сделаны изменение
  git checkout example.txt    отменить измемение в указанном файле
================================================
2.Как вернуть файл из индекса в рабочий каталог?
git restore --staged example.txt
================================================
3.Как отменить ошибочный commit ?
git reset HEAD~1     – откатиться назад на 1 шаг (1 - количетсво шагов)
если нужно откатится глубже
git reset HEAD^^   - откатися назад на 2 шага(^^ - количетсво шагов)
================================================
4.Как создать новую ветку и переключится в нее?

git checkout -b (имя новой ветки, на которую переключиться)
================================================
5.В чем отличение между fast-forward merge  and non fast-forfard merge?
 
 При fast-forward merge всегда создается новый коммит, а при non fast-forfard merge – используются существующие коммиты.
==================================================
6.Когда может возникнуть конфликт слияния веток, как  его разрешить?

Конфликты возникнут, если вносятся различные изменения в ту же строку файла или если один юзер хочет изменить файл, а другой его удаляет. 

Нужно открыть файл в любом редакторе, чтобы просмотреть и устранить конфликтующий текст. Git добавил набор маркеров для указания экземпляров конфликтующего текста. 
Например:
Текст между <<<<<<< и ======= является целевой версией ветви конфликтующего текста.
Текст между ======= и >>>>>>> является версией исходной ветви конфликтующего текста.

Измените файл, чтобы разрешить конфликтующий текст. Удалите маркеры конфликтов слиянием, так вы сообщаете Git, что вы разрешили конфликт. 

Запустите git add <example> , чтобы подготовить файл после разрешения всего конфликтующего текста.

Повторите предыдущие шаги для всех файлов с конфликтами содержимого
=======================================================

7.Можно ли удалить ветку? Как? 
можно: 
Git checkout name(имя ветки куда пройти) - надо уити с ветки в которой находиша

git branch -d name(имя ветки, которую надо удалить)
======================================================

В ответах на вопросы 1-4, 7 необходимо указать конкретные команда git. 
На 5 и 6 вопросы дать объяснение своими словами.
